(()=>{var e,t={68:(e,t,n)=>{"use strict";t.o=void 0;var r=n(571);Object.defineProperty(t,"o",{enumerable:!0,get:function(){return r.ElasticV3BrowserShipper}})},571:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ElasticV3BrowserShipper=void 0;var r=n(941),s=n(190),i=n(117),a=n(117),o=function(){function e(t,n){if(this.options=t,this.initContext=n,this.telemetryCounter$=new s.Subject,this.reportTelemetryCounters=(0,a.createTelemetryCounterHelper)(this.telemetryCounter$,e.shipperName),this.internalQueue$=new s.Subject,this.flush$=new s.Subject,this.queueFlushed$=new s.Subject,this.isOptedIn$=new s.BehaviorSubject(void 0),this.clusterUuid="UNKNOWN",this.setUpInternalQueueSubscriber(),!t.buildShipperHeaders)throw new Error("ElasticV3BrowserShipper requires options.buildShipperHeaders on initialization.");if(!t.buildShipperUrl)throw new Error("ElasticV3BrowserShipper requires options.buildShipperUrl on initialization.");this.buildHeaders=t.buildShipperHeaders,this.url=t.buildShipperUrl({channelName:t.channelName})}return e.prototype.extendContext=function(e){e.cluster_uuid&&(this.clusterUuid=e.cluster_uuid),e.license_id&&(this.licenseId=e.license_id)},e.prototype.optIn=function(e){this.isOptedIn$.next(e)},e.prototype.reportEvents=function(e){var t=this;e.forEach((function(e){t.internalQueue$.next(e)}))},e.prototype.flush=function(){return r.__awaiter(this,void 0,void 0,(function(){var e;return r.__generator(this,(function(t){switch(t.label){case 0:return this.flush$.isStopped?[2]:(e=(0,s.firstValueFrom)(this.queueFlushed$),this.flush$.next(),[4,e]);case 1:return t.sent(),[2]}}))}))},e.prototype.shutdown=function(){this.internalQueue$.complete(),this.flush$.complete()},e.prototype.setUpInternalQueueSubscriber=function(){var e=this;this.internalQueue$.pipe((0,s.bufferWhen)((function(){return(0,s.merge)(e.flush$,(0,s.interval)(1e3).pipe((0,s.skipWhile)((function(){return void 0===e.isOptedIn$.value}))))})),(0,s.concatMap)((function(t){return r.__awaiter(e,void 0,void 0,(function(){return r.__generator(this,(function(e){switch(e.label){case 0:return!0===this.isOptedIn$.value&&t.length>0?[4,this.sendEvents(t)]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))})),(0,s.map)((function(){return e.queueFlushed$.next()}))).subscribe()},e.prototype.sendEvents=function(e){return r.__awaiter(this,void 0,void 0,(function(){var t,n;return r.__generator(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4,this.makeRequest(e)];case 1:return t=r.sent(),this.reportTelemetryCounters(e,{code:t}),[3,3];case 2:return n=r.sent(),this.reportTelemetryCounters(e,{code:n.code,error:n}),[3,3];case 3:return[2]}}))}))},e.prototype.makeRequest=function(t){return r.__awaiter(this,void 0,void 0,(function(){var n,s,o,l,c,u,h,d;return r.__generator(this,(function(p){switch(p.label){case 0:return[4,fetch(this.url,r.__assign(r.__assign({method:"POST",body:(0,a.eventsToNDJSON)(t),headers:this.buildHeaders(this.clusterUuid,this.options.version,this.licenseId)},this.options.debug&&{query:{debug:!0}}),{keepalive:!0}))];case 1:return n=p.sent(),this.options.debug?(o=(s=this.initContext.logger).debug,c=(l="[".concat(e.shipperName,"]: ").concat(n.status," - ")).concat,[4,n.text()]):[3,3];case 2:o.apply(s,[c.apply(l,[p.sent()])]),p.label=3;case 3:return n.ok?[3,5]:(u=i.ErrorWithCode.bind,d=(h="".concat(n.status," - ")).concat,[4,n.text()]);case 4:throw new(u.apply(i.ErrorWithCode,[void 0,d.apply(h,[p.sent()]),"".concat(n.status)]));case 5:return[2,"".concat(n.status)]}}))}))},e.shipperName="elastic_v3_browser",e}();t.ElasticV3BrowserShipper=o},117:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createTelemetryCounterHelper=t.eventsToNDJSON=t.ErrorWithCode=void 0;var r=n(657);Object.defineProperty(t,"ErrorWithCode",{enumerable:!0,get:function(){return r.ErrorWithCode}});var s=n(922);Object.defineProperty(t,"eventsToNDJSON",{enumerable:!0,get:function(){return s.eventsToNDJSON}});var i=n(710);Object.defineProperty(t,"createTelemetryCounterHelper",{enumerable:!0,get:function(){return i.createTelemetryCounterHelper}})},657:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ErrorWithCode=void 0;var r=n(941),s=function(e){function t(t,n){var r=e.call(this,t)||this;return r.code=n,r}return r.__extends(t,e),t}(Error);t.ErrorWithCode=s},922:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.eventsToNDJSON=function(e){return"".concat(e.map((function(e){return JSON.stringify(e)})).join("\n"),"\n")}},710:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createTelemetryCounterHelper=function(e,t){return function(n,s){var i=void 0===s?{}:s,a=i.type,o=i.code,l=i.error,c=function(e){return e.reduce((function(e,t){return e[t.event_type]?e[t.event_type]+=1:e[t.event_type]=1,e}),{})}(n);Object.entries(c).forEach((function(n){var s,i=r.__read(n,2),c=i[0],u=i[1];e.next({source:t,type:null!=a?a:l?"failed":"succeeded",code:null!==(s=null!=o?o:null==l?void 0:l.message)&&void 0!==s?s:"OK",count:u,event_type:c})}))}};var r=n(941)},787:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ENDPOINT_PROD:()=>h,ENDPOINT_STAGING:()=>u,ENDPOINT_VERSION:()=>c,LOCALSTORAGE_KEY:()=>a,OPT_IN_POLL_INTERVAL_MS:()=>i,PATH_TO_ADVANCED_SETTINGS:()=>o,PAYLOAD_CONTENT_ENCODING:()=>l,REPORT_INTERVAL_BUFFER_MS:()=>s,REPORT_INTERVAL_MS:()=>r,TELEMETRY_CHANNELS:()=>d});const r=864e5,s=12e4,i=1e4,a="telemetry.data",o="/app/management/kibana/settings",l="aes256gcm",c="v3",u="https://telemetry-staging.elastic.co/",h="https://telemetry.elastic.co/",d={SNAPSHOT_CHANNEL:"kibana-snapshot",OPT_IN_STATUS_CHANNEL:"kibana-opt-in-reports"}},585:(e,t,n)=>{"use strict";n.r(t),n.d(t,{plugin:()=>A});var r=n(915),s=n(68),i=n(190);const a=(e,t,n)=>({"content-type":"application/x-ndjson","x-elastic-cluster-id":e,"x-elastic-stack-version":t,...n&&{"x-elastic-license-id":n}}),o=e=>t=>{const{channelName:n}=t;return`${"production"===e?"https://telemetry.elastic.co":"https://telemetry-staging.elastic.co"}/v3/send/${n}`},l="/internal/telemetry",c={version:"2"},u=`${l}/config`,h=`${l}/last_reported`,d=`${l}/userHasSeenNotice`,p=`${l}/optIn`,f=`${l}/clusters/_stats`;var y=n(215),S=n(787);function g(e){return!e||isNaN(e)||Date.now()-e>S.REPORT_INTERVAL_MS-S.REPORT_INTERVAL_BUFFER_MS}var m=n(721);class TelemetrySender{static getRetryDelay(e){return 1e3*Math.min(Math.pow(2,e),64)*60}constructor(e,t){(0,r.default)(this,"lastReported",void 0),(0,r.default)(this,"storage",void 0),(0,r.default)(this,"sendIfDue$",void 0),(0,r.default)(this,"retryCount",0),(0,r.default)(this,"updateLastReported",(e=>{this.lastReported=e,this.storage.set(S.LOCALSTORAGE_KEY,{lastReport:`${this.lastReported}`})})),(0,r.default)(this,"isReportDue",(async()=>{if(!g(this.lastReported))return!1;const e=await this.telemetryService.fetchLastReported();return e&&this.updateLastReported(e),g(e)})),(0,r.default)(this,"isActiveWindow",(()=>document.hasFocus())),(0,r.default)(this,"shouldSendReport",(async()=>!!(this.isActiveWindow()&&this.telemetryService.canSendTelemetry()&&await this.isReportDue())&&(await this.refreshConfig(),this.telemetryService.canSendTelemetry()))),(0,r.default)(this,"sendIfDue",(async()=>{await this.shouldSendReport()&&(this.updateLastReported(Date.now()),this.retryCount=0,await this.sendUsageData())})),(0,r.default)(this,"sendUsageData",(async()=>{try{const e=this.telemetryService.getTelemetryUrl(),t=await this.telemetryService.fetchTelemetry();await Promise.all(t.map((async({clusterUuid:t,stats:n})=>await fetch(e,{method:"POST",headers:{"Content-Type":"application/json","X-Elastic-Stack-Version":this.telemetryService.currentKibanaVersion,"X-Elastic-Cluster-ID":t,"X-Elastic-Content-Encoding":S.PAYLOAD_CONTENT_ENCODING},body:n})))),await this.telemetryService.updateLastReported().catch((()=>{}))}catch(e){this.retryCount=this.retryCount+1,this.retryCount<20?window.setTimeout(this.sendUsageData,TelemetrySender.getRetryDelay(this.retryCount)):m.warn(`TelemetrySender.sendUsageData exceeds number of retry attempts with ${e.message}`)}})),(0,r.default)(this,"startChecking",(()=>{this.sendIfDue$||(this.sendIfDue$=(0,i.merge)((0,i.interval)(6e4),(0,i.fromEvent)(window,"focus")).pipe((0,i.exhaustMap)(this.sendIfDue)).subscribe())})),(0,r.default)(this,"stop",(()=>{var e;null===(e=this.sendIfDue$)||void 0===e||e.unsubscribe()})),this.telemetryService=e,this.refreshConfig=t,this.storage=new y.Storage(window.localStorage);const n=this.storage.get(S.LOCALSTORAGE_KEY);n&&(this.lastReported=parseInt(n.lastReport,10))}}var v=n(8);function b({channelName:e,env:t,appendServerlessChannelsSuffix:n}){const r=function(e){switch(e){case"prod":return S.ENDPOINT_PROD;case"staging":return S.ENDPOINT_STAGING;default:throw new Error(`Unknown telemetry endpoint env ${e}.`)}}(t),s=function(e,t){let n;switch(e){case"snapshot":n=S.TELEMETRY_CHANNELS.SNAPSHOT_CHANNEL;break;case"optInStatus":n=S.TELEMETRY_CHANNELS.OPT_IN_STATUS_CHANNEL;break;default:throw new Error(`Unknown telemetry channel ${e}.`)}return t?`${n}-serverless`:n}(e,n);return`${r}${S.ENDPOINT_VERSION}/send/${s}`}class TelemetryService{constructor({config:e,http:t,isScreenshotMode:n,notifications:s,currentKibanaVersion:i,reportOptInStatusChange:a=!0}){(0,r.default)(this,"http",void 0),(0,r.default)(this,"reportOptInStatusChange",void 0),(0,r.default)(this,"notifications",void 0),(0,r.default)(this,"defaultConfig",void 0),(0,r.default)(this,"isScreenshotMode",void 0),(0,r.default)(this,"updatedConfig",void 0),(0,r.default)(this,"currentKibanaVersion",void 0),(0,r.default)(this,"getCanChangeOptInStatus",(()=>this.config.allowChangingOptInStatus)),(0,r.default)(this,"getOptInStatusUrl",(()=>{const{appendServerlessChannelsSuffix:e,sendUsageTo:t}=this.config;return b({channelName:"optInStatus",env:t,appendServerlessChannelsSuffix:e})})),(0,r.default)(this,"getTelemetryUrl",(()=>{const{appendServerlessChannelsSuffix:e,sendUsageTo:t}=this.config;return b({channelName:"snapshot",env:t,appendServerlessChannelsSuffix:e})})),(0,r.default)(this,"getIsOptedIn",(()=>this.isOptedIn)),(0,r.default)(this,"canSendTelemetry",(()=>!this.isScreenshotMode&&this.getIsOptedIn())),(0,r.default)(this,"fetchLastReported",(async()=>{const e=await this.http.get(h,c);return null==e?void 0:e.lastReported})),(0,r.default)(this,"updateLastReported",(async()=>this.http.put(h,c))),(0,r.default)(this,"fetchExample",(async()=>await this.fetchTelemetry({unencrypted:!0,refreshCache:!0}))),(0,r.default)(this,"fetchTelemetry",(async({unencrypted:e=!1,refreshCache:t=!1}={})=>this.http.post(f,{...c,body:JSON.stringify({unencrypted:e,refreshCache:t})}))),(0,r.default)(this,"setOptIn",(async e=>{if(!this.getCanChangeOptInStatus())return!1;try{const t=await this.http.post(p,{...c,body:JSON.stringify({enabled:e})});this.reportOptInStatusChange&&await this.reportOptInStatus(t),this.isOptedIn=e}catch(e){return this.notifications.toasts.addError(e,{title:v.i18n.translate("telemetry.optInErrorToastTitle",{defaultMessage:"Error"}),toastMessage:v.i18n.translate("telemetry.optInErrorToastText",{defaultMessage:"An error occurred while trying to set the usage statistics preference."})}),!1}return!0})),(0,r.default)(this,"setUserHasSeenNotice",(async()=>{try{await this.http.put(d,c),this.userHasSeenOptedInNotice=!0}catch(e){this.notifications.toasts.addError(e,{title:v.i18n.translate("telemetry.optInNoticeSeenErrorTitle",{defaultMessage:"Error"}),toastMessage:v.i18n.translate("telemetry.optInNoticeSeenErrorToastText",{defaultMessage:"An error occurred dismissing the notice"})}),this.userHasSeenOptedInNotice=!1}})),(0,r.default)(this,"reportOptInStatus",(async e=>{const t=this.getOptInStatusUrl();try{await Promise.all(e.map((async({clusterUuid:e,stats:n})=>await fetch(t,{method:"POST",headers:{"Content-Type":"application/json","X-Elastic-Stack-Version":this.currentKibanaVersion,"X-Elastic-Cluster-ID":e,"X-Elastic-Content-Encoding":S.PAYLOAD_CONTENT_ENCODING},body:n}))))}catch(e){}})),this.defaultConfig=e,this.isScreenshotMode=n,this.reportOptInStatusChange=a,this.notifications=s,this.currentKibanaVersion=i,this.http=t}set config(e){this.updatedConfig=e}get config(){return{...this.defaultConfig,...this.updatedConfig}}get isOptedIn(){return Boolean(this.config.optIn)}set isOptedIn(e){this.config={...this.config,optIn:e}}get userHasSeenOptedInNotice(){return this.config.telemetryNotifyUserAboutOptInDefault}set userHasSeenOptedInNotice(e){this.config={...this.config,telemetryNotifyUserAboutOptInDefault:e}}getUserShouldSeeOptInNotice(){var e;return null!==(e=!this.config.hidePrivacyStatement&&this.config.userCanChangeSettings&&(this.config.telemetryNotifyUserAboutOptInDefault||null===this.config.optIn))&&void 0!==e&&e}get userCanChangeSettings(){var e;return null!==(e=this.config.userCanChangeSettings)&&void 0!==e&&e}set userCanChangeSettings(e){this.config={...this.config,userCanChangeSettings:e}}}var _=n(286),C=n.n(_);const N=__kbnSharedDeps__.ReactDom;var I=n.n(N);const O=__kbnSharedDeps__.KbnReactKibanaContextRender;var T=n(791);_.Component;var E=n(185);const w=__kbnSharedDeps__.KbnSharedUxErrorBoundary;var P=n(319),x={name:"1azakc",styles:"text-align:center"};const R=()=>{const e=x;return(0,T.jsx)("div",{css:e},(0,T.jsx)(P.EuiLoadingSpinner,null))},D=(e,t=(0,T.jsx)(R,null))=>C().forwardRef(((n,r)=>(0,T.jsx)(w.KibanaErrorBoundaryProvider,{analytics:n.analytics},(0,T.jsx)(w.KibanaErrorBoundary,null,(0,T.jsx)(_.Suspense,{fallback:t},(0,T.jsx)(e,(0,E.default)({},n,{ref:r})))))));class TelemetryNotifications{constructor({http:e,overlays:t,telemetryService:s,telemetryConstants:i,...a}){(0,r.default)(this,"http",void 0),(0,r.default)(this,"overlays",void 0),(0,r.default)(this,"startServices",void 0),(0,r.default)(this,"telemetryConstants",void 0),(0,r.default)(this,"telemetryService",void 0),(0,r.default)(this,"optInStatusNoticeBannerId",void 0),(0,r.default)(this,"shouldShowOptInStatusNoticeBanner",(()=>{const e=this.telemetryService.getUserShouldSeeOptInNotice();return!(void 0!==this.optInStatusNoticeBannerId)&&e})),(0,r.default)(this,"renderOptInStatusNoticeBanner",(()=>{const e=function({onSeen:e,overlays:t,http:r,telemetryConstants:s,telemetryService:i,...a}){const o=D(C().lazy((()=>n.e(21).then(n.bind(n,21)).then((({OptInStatusNoticeBanner:e})=>({default:e})))))),l=(c=(0,T.jsx)(o,{onSeenBanner:e,http:r,telemetryConstants:s,telemetryService:i}),u=a,e=>(I().render((0,T.jsx)(O.KibanaRenderContextProvider,u,c),e),()=>I().unmountComponentAtNode(e)));var c,u;return t.banners.add(l,1e4)}({http:this.http,onSeen:this.setOptInStatusNoticeSeen,overlays:this.overlays,telemetryConstants:this.telemetryConstants,telemetryService:this.telemetryService,...this.startServices});this.optInStatusNoticeBannerId=e})),(0,r.default)(this,"setOptInStatusNoticeSeen",(async()=>{this.optInStatusNoticeBannerId&&(this.overlays.banners.remove(this.optInStatusNoticeBannerId),this.optInStatusNoticeBannerId=void 0),await this.telemetryService.setUserHasSeenNotice()})),this.telemetryService=s,this.http=e,this.overlays=t,this.startServices=a,this.telemetryConstants=i}}function U(e){return{getPrivacyStatementUrl:()=>e.links.legal.privacyStatement}}class TelemetryPlugin{constructor(e){(0,r.default)(this,"currentKibanaVersion",void 0),(0,r.default)(this,"config",void 0),(0,r.default)(this,"telemetryLabels$",void 0),(0,r.default)(this,"telemetrySender",void 0),(0,r.default)(this,"telemetryNotifications",void 0),(0,r.default)(this,"telemetryService",void 0),(0,r.default)(this,"canUserChangeSettings",!0),this.currentKibanaVersion=e.env.packageInfo.version,this.config=e.config.get(),this.telemetryLabels$=new i.BehaviorSubject(this.config.labels)}setup(e,{screenshotMode:t,home:r}){const{analytics:l,http:c,notifications:u,getStartServices:h}=e,d=this.config,p=this.currentKibanaVersion;let f;this.telemetryService=new TelemetryService({config:d,isScreenshotMode:this.shouldSkipTelemetry(t),http:c,notifications:u,currentKibanaVersion:p}),h().then((([{docLinks:e}])=>{f=U(e)})),l.registerContextProvider({name:"telemetry labels",context$:this.telemetryLabels$.pipe((0,i.tap)((e=>{var t;null===(t=window.elasticApm)||void 0===t||t.addLabels(e)})),(0,i.map)((e=>({labels:e})))),schema:{labels:{type:"pass_through",_meta:{description:"Custom labels added to the telemetry.labels config in the kibana.yml"}}}});const y=this.getSendToEnv(d.sendUsageTo);return l.registerShipper(s.o,{channelName:"kibana-browser",version:p,buildShipperHeaders:a,buildShipperUrl:o(y)}),d.localShipper&&n.e(983).then(n.bind(n,983)).then((({initializeLocalShipper:t})=>t(e))).catch((()=>{})),this.telemetrySender=new TelemetrySender(this.telemetryService,(async()=>{await this.refreshConfig(c),l.optIn({global:{enabled:this.telemetryService.isOptedIn&&!this.shouldSkipTelemetry(t)}})})),r&&!this.config.hidePrivacyStatement&&(r.welcomeScreen.registerOnRendered((()=>{var e,t;null!==(e=this.telemetryService)&&void 0!==e&&e.userCanChangeSettings&&(null===(t=this.telemetryNotifications)||void 0===t||t.setOptInStatusNoticeSeen())})),r.welcomeScreen.registerTelemetryNoticeRenderer((()=>function(e,t,r){const s=D(C().lazy((()=>n.e(322).then(n.bind(n,322)).then((({WelcomeTelemetryNotice:e})=>({default:e}))))));return(0,T.jsx)(s,{telemetryService:e,telemetryConstants:r,addBasePath:t})}(this.telemetryService,c.basePath.prepend,f)))),{telemetryService:this.getTelemetryServicePublicApis()}}start({analytics:e,http:t,overlays:n,application:r,docLinks:s,...a},{screenshotMode:o}){if(!this.telemetryService)throw Error("Telemetry plugin failed to initialize properly.");this.canUserChangeSettings=this.getCanUserChangeSettings(r),this.telemetryService.userCanChangeSettings=this.canUserChangeSettings;const l=U(s),c=new TelemetryNotifications({http:t,overlays:n,telemetryService:this.telemetryService,telemetryConstants:l,analytics:e,...a});return this.telemetryNotifications=c,r.currentAppId$.pipe((0,i.switchMap)((async()=>{if(this.shouldSkipTelemetry(o))return void e.optIn({global:{enabled:!1}});const n=await this.refreshConfig(t);if(e.optIn({global:{enabled:this.telemetryService.isOptedIn}}),this.getIsUnauthenticated(t))return;const r=null==n?void 0:n.banner;this.maybeStartTelemetryPoller(),r&&this.maybeShowOptedInNotificationBanner()}))).subscribe(),{telemetryService:this.getTelemetryServicePublicApis(),telemetryNotifications:{setOptedInNoticeSeen:()=>c.setOptInStatusNoticeSeen()},telemetryConstants:l}}stop(){var e;null===(e=this.telemetrySender)||void 0===e||e.stop()}getSendToEnv(e){return"prod"===e?"production":"staging"}shouldSkipTelemetry(e){return e.isScreenshotMode()||window.navigator.userAgent.includes("Elastic/Synthetics")}getTelemetryServicePublicApis(){const e=this.telemetryService;return{getIsOptedIn:()=>e.getIsOptedIn(),setOptIn:t=>e.setOptIn(t),canSendTelemetry:()=>e.canSendTelemetry(),userCanChangeSettings:e.userCanChangeSettings,getCanChangeOptInStatus:()=>e.getCanChangeOptInStatus(),fetchExample:()=>e.fetchExample()}}async refreshConfig(e){const t=await this.fetchUpdatedConfig(e);return this.telemetryService&&(this.telemetryService.config=t),this.telemetryLabels$.next(t.labels),t}getCanUserChangeSettings(e){var t,n,r;return null===(t=null===(n=e.capabilities)||void 0===n||null===(r=n.savedObjectsManagement)||void 0===r?void 0:r.edit)||void 0===t||t}getIsUnauthenticated(e){const{anonymousPaths:t}=e;return t.isAnonymous(window.location.pathname)}maybeStartTelemetryPoller(){this.telemetrySender&&this.telemetrySender.startChecking()}maybeShowOptedInNotificationBanner(){this.telemetryNotifications&&this.telemetryNotifications.shouldShowOptInStatusNoticeBanner()&&this.telemetryNotifications.renderOptInStatusNoticeBanner()}async fetchUpdatedConfig(e){const{allowChangingOptInStatus:t,optIn:n,sendUsageFrom:r,telemetryNotifyUserAboutOptInDefault:s,labels:i}=await e.get(u,c);return{...this.config,allowChangingOptInStatus:t,optIn:n,sendUsageFrom:r,telemetryNotifyUserAboutOptInDefault:s,labels:i,userCanChangeSettings:this.canUserChangeSettings}}}function A(e){return new TelemetryPlugin(e)}},731:(e,t,n)=>{n.p=window.__kbnPublicPath__.telemetry},215:(e,t,n)=>{n.r(t);var r=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},721:(e,t,n)=>{e.exports=n(497)(4971)},185:(e,t,n)=>{e.exports=n(497)(51858)},915:(e,t,n)=>{e.exports=n(497)(67493)},319:e=>{"use strict";e.exports=__kbnSharedDeps__.ElasticEui},791:e=>{"use strict";e.exports=__kbnSharedDeps__.EmotionReact},8:e=>{"use strict";e.exports=__kbnSharedDeps__.KbnI18n},879:e=>{"use strict";e.exports=__kbnSharedDeps__.KbnI18nReact},286:e=>{"use strict";e.exports=__kbnSharedDeps__.React},190:e=>{"use strict";e.exports=__kbnSharedDeps__.Rxjs},941:e=>{"use strict";e.exports=__kbnSharedDeps__.TsLib},497:e=>{"use strict";e.exports=__kbnSharedDeps_npm__}},n={};function r(e){var s=n[e];if(void 0!==s)return s.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,r),i.exports}r.m=t,r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.f={},r.e=e=>Promise.all(Object.keys(r.f).reduce(((t,n)=>(r.f[n](e,t),t)),[])),r.u=e=>"telemetry.chunk."+e+".js",r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},r.l=(t,n,s,i)=>{if(e[t])e[t].push(n);else{var a,o;if(void 0!==s)for(var l=document.getElementsByTagName("script"),c=0;c<l.length;c++){var u=l[c];if(u.getAttribute("src")==t){a=u;break}}a||(o=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,r.nc&&a.setAttribute("nonce",r.nc),a.src=t),e[t]=[n];var h=(n,r)=>{a.onerror=a.onload=null,clearTimeout(d);var s=e[t];if(delete e[t],a.parentNode&&a.parentNode.removeChild(a),s&&s.forEach((e=>e(r))),n)return n(r)},d=setTimeout(h.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=h.bind(null,a.onerror),a.onload=h.bind(null,a.onload),o&&document.head.appendChild(a)}},r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var s=n.length-1;s>-1&&(!e||!/^http(s?):/.test(e));)e=n[s--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{var e={240:0};r.f.j=(t,n)=>{var s=r.o(e,t)?e[t]:void 0;if(0!==s)if(s)n.push(s[2]);else{var i=new Promise(((n,r)=>s=e[t]=[n,r]));n.push(s[2]=i);var a=r.p+r.u(t),o=new Error;r.l(a,(n=>{if(r.o(e,t)&&(0!==(s=e[t])&&(e[t]=void 0),s)){var i=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;o.message="Loading chunk "+t+" failed.\n("+i+": "+a+")",o.name="ChunkLoadError",o.type=i,o.request=a,s[1](o)}}),"chunk-"+t,t)}};var t=(t,n)=>{var s,i,[a,o,l]=n,c=0;if(a.some((t=>0!==e[t]))){for(s in o)r.o(o,s)&&(r.m[s]=o[s]);l&&l(r)}for(t&&t(n);c<a.length;c++)i=a[c],r.o(e,i)&&e[i]&&e[i][0](),e[i]=0},n=self.telemetry_bundle_jsonpfunction=self.telemetry_bundle_jsonpfunction||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),r(731),__kbnBundles__.define("plugin/telemetry/public",r,585),__kbnBundles__.define("plugin/telemetry/common/constants",r,787)})();