(()=>{var e,t={699:(e,t,i)=>{"use strict";i.d(t,{VG:()=>n,ml:()=>r,PO:()=>s});const n=e=>{if(e){var t;const i=e=>e.type?e:e.child?i(e.child):void 0;return null===(t=i(e))||void 0===t?void 0:t.type}},r=e=>{if(e){var t;const i=e=>e.child?i(e.child):e;return null===(t=i(e))||void 0===t?void 0:t.type}};function s(e,t){return e&&e[t]?Object.fromEntries(Object.entries(e[t]).map((([e,t])=>"ignore"===t?[e,void 0]:[e,t]))):{}}i(195)},478:(e,t,i)=>{"use strict";i.d(t,{WR:()=>n,ix:()=>s,mS:()=>r});const n="metricVis",r="metricTrendline",s="default"},348:(e,t,i)=>{"use strict";i.r(t),i.d(t,{EXPRESSION_METRIC_NAME:()=>o.WR,EXPRESSION_METRIC_TRENDLINE_NAME:()=>o.mS,getDataBoundsForPalette:()=>y._,plugin:()=>x});var n=i(215),r=i(8),s=i(634),a=i(59),o=i(478);const l=()=>({name:o.WR,type:"render",inputTypes:["datatable"],help:r.i18n.translate("expressionMetricVis.function.help",{defaultMessage:"Metric visualization"}),args:{metric:{types:["vis_dimension","string"],help:r.i18n.translate("expressionMetricVis.function.metric.help",{defaultMessage:"The primary metric."}),required:!0},secondaryMetric:{types:["vis_dimension","string"],help:r.i18n.translate("expressionMetricVis.function.secondaryMetric.help",{defaultMessage:"The secondary metric (shown above the primary)."})},max:{types:["vis_dimension","string"],help:r.i18n.translate("expressionMetricVis.function.max.help.",{defaultMessage:"The dimension containing the maximum value."})},breakdownBy:{types:["vis_dimension","string"],help:r.i18n.translate("expressionMetricVis.function.breakdownBy.help",{defaultMessage:"The dimension containing the labels for sub-categories."})},trendline:{types:[o.mS],help:r.i18n.translate("expressionMetricVis.function.trendline.help",{defaultMessage:"An optional trendline configuration"})},subtitle:{types:["string"],help:r.i18n.translate("expressionMetricVis.function.subtitle.help",{defaultMessage:"The subtitle for a single metric. Overridden if breakdownBy is supplied."})},secondaryPrefix:{types:["string"],help:r.i18n.translate("expressionMetricVis.function.secondaryPrefix.help",{defaultMessage:"Optional text to be show before secondaryMetric."})},progressDirection:{types:["string"],options:[a.LayoutDirection.Vertical,a.LayoutDirection.Horizontal],help:r.i18n.translate("expressionMetricVis.function.progressDirection.help",{defaultMessage:"The direction the progress bar should grow. Must be provided to render a progress bar."})},titlesTextAlign:{types:["string"],help:r.i18n.translate("expressionMetricVis.function.titlesTextAlign.help",{defaultMessage:"The alignment of the Title and Subtitle."})},valuesTextAlign:{types:["string"],help:r.i18n.translate("expressionMetricVis.function.valuesTextAlign.help",{defaultMessage:"The alignment of the Primary and Secondary Metric."})},iconAlign:{types:["string"],help:r.i18n.translate("expressionMetricVis.function.iconAlign.help",{defaultMessage:"The alignment of icon."})},valueFontSize:{types:["string","number"],help:r.i18n.translate("expressionMetricVis.function.valueFontSize.help",{defaultMessage:"The value font size."})},color:{types:["string"],help:r.i18n.translate("expressionMetricVis.function.color.help",{defaultMessage:"Provides a static visualization color. Overridden by palette."})},icon:{types:["string"],help:r.i18n.translate("expressionMetricVis.function.icon.help",{defaultMessage:"Provides a static visualization icon."})},palette:{types:["palette"],help:r.i18n.translate("expressionMetricVis.function.palette.help",{defaultMessage:"Provides colors for the values, based on the bounds."})},maxCols:{types:["number"],help:r.i18n.translate("expressionMetricVis.function.numCols.help",{defaultMessage:"Specifies the max number of columns in the metric grid."}),default:5},minTiles:{types:["number"],help:r.i18n.translate("expressionMetricVis.function.minTiles.help",{defaultMessage:"Specifies the minimum number of tiles in the metric grid regardless of the input data."})},inspectorTableId:{types:["string"],help:r.i18n.translate("expressionMetricVis.function.inspectorTableId.help",{defaultMessage:"An ID for the inspector table"}),multi:!1,default:"default"}},fn(e,t,i){var n,a,l;if((0,s.validateAccessor)(t.metric,e.columns),(0,s.validateAccessor)(t.secondaryMetric,e.columns),(0,s.validateAccessor)(t.max,e.columns),(0,s.validateAccessor)(t.breakdownBy,e.columns),null!=i&&null!==(n=i.inspectorAdapters)&&void 0!==n&&n.tables){var c;i.inspectorAdapters.tables.reset(),i.inspectorAdapters.tables.allowCsvExport=!0;const n=[[[t.metric],r.i18n.translate("expressionMetricVis.function.dimension.metric",{defaultMessage:"Metric"})]];t.secondaryMetric&&n.push([[t.secondaryMetric],r.i18n.translate("expressionMetricVis.function.dimension.secondaryMetric",{defaultMessage:"Secondary Metric"})]),t.breakdownBy&&n.push([[t.breakdownBy],r.i18n.translate("expressionMetricVis.function.dimension.splitGroup",{defaultMessage:"Split group"})]),t.max&&n.push([[t.max],r.i18n.translate("expressionMetricVis.function.dimension.maximum",{defaultMessage:"Maximum"})]);const a=(0,s.prepareLogTable)(e,n,!0);var d,p;i.inspectorAdapters.tables.logDatatable(t.inspectorTableId,a),null!==(c=t.trendline)&&void 0!==c&&c.inspectorTable&&t.trendline.inspectorTableId&&i.inspectorAdapters.tables.logDatatable(null===(d=t.trendline)||void 0===d?void 0:d.inspectorTableId,null===(p=t.trendline)||void 0===p?void 0:p.inspectorTable)}return{type:"render",as:o.WR,value:{visData:e,visType:"metric",visConfig:{metric:{subtitle:t.subtitle,secondaryPrefix:t.secondaryPrefix,color:t.color,icon:t.icon,palette:t.palette,progressDirection:t.progressDirection,titlesTextAlign:t.titlesTextAlign,valuesTextAlign:t.valuesTextAlign,iconAlign:t.iconAlign,valueFontSize:t.valueFontSize,maxCols:t.maxCols,minTiles:t.minTiles,trends:null===(a=t.trendline)||void 0===a?void 0:a.trends},dimensions:{metric:t.metric,secondaryMetric:t.secondaryMetric,max:t.max,breakdownBy:t.breakdownBy}},overrides:null===(l=i.variables)||void 0===l?void 0:l.overrides}}}});var c=i(209);i(286);const d=__kbnSharedDeps__.ReactDom,p=__kbnSharedDeps__.KbnReactKibanaContextRender;var u=i(791);const m=__kbnSharedDeps__.KbnAnalytics;var f=i(699),h={name:"16k86jb",styles:"height:100%;width:100%;display:flex;align-items:center;justify-content:center"};var g=i(669),b=i(530);const v=()=>({name:o.mS,inputTypes:["datatable"],type:o.mS,help:r.i18n.translate("expressionMetricVis.trendline.function.help",{defaultMessage:"Metric visualization"}),args:{metric:{types:["vis_dimension","string"],help:r.i18n.translate("expressionMetricVis.trendline.function.metric.help",{defaultMessage:"The primary metric."}),required:!0},timeField:{types:["vis_dimension","string"],help:r.i18n.translate("expressionMetricVis.trendline.function.timeField.help",{defaultMessage:"The time field for the trend line"}),required:!0},breakdownBy:{types:["vis_dimension","string"],help:r.i18n.translate("expressionMetricVis.trendline.function.breakdownBy.help",{defaultMessage:"The dimension containing the labels for sub-categories."})},table:{types:["datatable"],help:r.i18n.translate("expressionMetricVis.trendline.function.table.help",{defaultMessage:"A data table"}),multi:!1},inspectorTableId:{types:["string"],help:r.i18n.translate("expressionMetricVis.trendline.function.inspectorTableId.help",{defaultMessage:"An ID for the inspector table"}),multi:!1,default:"trendline"}},fn(e,t,i){var n,a;const l=t.table;(0,s.validateAccessor)(t.metric,l.columns),(0,s.validateAccessor)(t.timeField,l.columns),(0,s.validateAccessor)(t.breakdownBy,l.columns);const c=[[[t.metric],r.i18n.translate("expressionMetricVis.function.dimension.metric",{defaultMessage:"Metric"})],[[t.timeField],r.i18n.translate("expressionMetricVis.function.dimension.timeField",{defaultMessage:"Time field"})]];t.breakdownBy&&c.push([[t.breakdownBy],r.i18n.translate("expressionMetricVis.function.dimension.splitGroup",{defaultMessage:"Split group"})]);const d=(0,s.prepareLogTable)(l,c,!0),p=null===(n=(0,s.getColumnByAccessor)(t.metric,l.columns))||void 0===n?void 0:n.id,u=null===(a=(0,s.getColumnByAccessor)(t.timeField,l.columns))||void 0===a?void 0:a.id;if(!p||!u)throw new Error("Metric trendline - couldn't find metric or time column!");const m={};if(t.breakdownBy){var f;const e=null===(f=(0,s.getColumnByAccessor)(t.breakdownBy,l.columns))||void 0===f?void 0:f.id;if(!e)throw new Error("Metric trendline - couldn't find breakdown column!");const i={};l.rows.forEach((t=>{const n=t[e];n in i||(i[n]=[]),i[n].push(t)}));for(const e in i)Object.hasOwn(i,e)&&(m[e]=i[e].map((e=>({x:null!==e[u]?e[u]:NaN,y:null!==e[p]?e[p]:NaN}))))}else m[o.ix]=l.rows.map((e=>({x:e[u],y:e[p]})));return{type:o.mS,trends:m,inspectorTable:d,inspectorTableId:t.inspectorTableId}}});class ExpressionMetricPlugin{setup(e,{expressions:t,charts:r}){const a=(0,n.createStartServicesGetter)(e.getStartServices);var y;r.palettes.getPalettes().then((e=>{(0,c.zx)(e)})),t.registerFunction(l),t.registerFunction(v),t.registerRenderer((y={getStartDeps:a},()=>({name:o.WR,displayName:"metric visualization",reuseDomNode:!0,render:async(e,{visData:t,visConfig:n,overrides:r},a)=>{var o;const{core:l,plugins:c}=y.getStartDeps();a.onDestroy((()=>{(0,d.unmountComponentAtNode)(e)}));const g=!!t.rows.length&&await async function(e,t,i){var n;const r=(0,s.getColumnByAccessor)(null!==(n=e.breakdownBy)&&void 0!==n?n:e.metric,t.columns),a=t.columns.indexOf(r),o=r?t.rows[0][r.id]:void 0;return Boolean(await(null==i?void 0:i({name:"filter",data:{data:[{table:t,column:a,row:0,value:o}]}})))}(n.dimensions,t,null===(o=a.hasCompatibleActions)||void 0===o?void 0:o.bind(a)),{MetricVis:b}=await i.e(736).then(i.bind(i,736));(0,d.render)((0,u.jsx)(p.KibanaRenderContextProvider,l,(0,u.jsx)("div",{"data-test-subj":"mtrVis",css:h},(0,u.jsx)(b,{data:t,config:n,renderComplete:()=>{const e=a.getExecutionContext(),t=(0,f.VG)(e),i=(0,f.ml)(e);var n;t&&i&&(null===(n=c.usageCollection)||void 0===n||n.reportUiCounter(t,m.METRIC_TYPE.COUNT,[`render_${i}_metric`])),a.done()},fireEvent:a.event,filterable:g,overrides:r}))),e)}}))),(0,b.P)(e.uiSettings),(0,g.F)(r.theme)}start(e,{fieldFormats:t}){(0,c.hX)(t)}}var y=i(229);function x(){return new ExpressionMetricPlugin}},209:(e,t,i)=>{"use strict";i.d(t,{tz:()=>r,hS:()=>o,LQ:()=>a.L,hX:()=>s,zx:()=>l});var n=i(215);const[r,s]=(0,n.createGetterSetter)("fieldFormats");var a=i(669);const[o,l]=(0,n.createGetterSetter)("palette");i(530)},669:(e,t,i)=>{"use strict";i.d(t,{F:()=>s,L:()=>r});var n=i(215);const[r,s]=(0,n.createGetterSetter)("charts.theme")},530:(e,t,i)=>{"use strict";i.d(t,{P:()=>s});var n=i(215);const[r,s]=(0,n.createGetterSetter)("uiSettings")},229:(e,t,i)=>{"use strict";i.d(t,{_:()=>n});const n=(e,t,i)=>{if(!t)return{min:-1/0,max:1/0};const n=Math.min(...t.rows.map((t=>t[e.metric]))),r=Math.max(...t.rows.map((t=>t[e.metric])));if(!(e.max||e.breakdownBy||void 0===i&&1!==t.rows.length))return r<0?{min:2*r,max:0}:{min:0,max:2*r};const s=e.max?i?t.rows[i][e.max]:Math.max(...t.rows.map((t=>t[e.max]))):r;return{min:e.breakdownBy&&!e.max?n:0,max:e.breakdownBy?e.max?s:r:s}}},881:(e,t,i)=>{i.p=window.__kbnPublicPath__.expressionMetricVis},195:(e,t,i)=>{i.r(t);var n=__kbnBundles__.get("plugin/data/common");Object.defineProperties(t,Object.getOwnPropertyDescriptors(n))},215:(e,t,i)=>{i.r(t);var n=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(n))},634:(e,t,i)=>{i.r(t);var n=__kbnBundles__.get("plugin/visualizations/common/utils");Object.defineProperties(t,Object.getOwnPropertyDescriptors(n))},59:e=>{"use strict";e.exports=__kbnSharedDeps__.ElasticCharts},319:e=>{"use strict";e.exports=__kbnSharedDeps__.ElasticEui},791:e=>{"use strict";e.exports=__kbnSharedDeps__.EmotionReact},8:e=>{"use strict";e.exports=__kbnSharedDeps__.KbnI18n},803:e=>{"use strict";e.exports=__kbnSharedDeps__.KbnUiTheme},286:e=>{"use strict";e.exports=__kbnSharedDeps__.React},497:e=>{"use strict";e.exports=__kbnSharedDeps_npm__}},i={};function n(e){var r=i[e];if(void 0!==r)return r.exports;var s=i[e]={exports:{}};return t[e](s,s.exports,n),s.exports}n.m=t,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,i)=>(n.f[i](e,t),t)),[])),n.u=e=>"expressionMetricVis.chunk."+e+".js",n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},n.l=(t,i,r,s)=>{if(e[t])e[t].push(i);else{var a,o;if(void 0!==r)for(var l=document.getElementsByTagName("script"),c=0;c<l.length;c++){var d=l[c];if(d.getAttribute("src")==t){a=d;break}}a||(o=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,n.nc&&a.setAttribute("nonce",n.nc),a.src=t),e[t]=[i];var p=(i,n)=>{a.onerror=a.onload=null,clearTimeout(u);var r=e[t];if(delete e[t],a.parentNode&&a.parentNode.removeChild(a),r&&r.forEach((e=>e(n))),i)return i(n)},u=setTimeout(p.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=p.bind(null,a.onerror),a.onload=p.bind(null,a.onload),o&&document.head.appendChild(a)}},n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var i=t.getElementsByTagName("script");if(i.length)for(var r=i.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=i[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e={861:0};n.f.j=(t,i)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)i.push(r[2]);else{var s=new Promise(((i,n)=>r=e[t]=[i,n]));i.push(r[2]=s);var a=n.p+n.u(t),o=new Error;n.l(a,(i=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=i&&("load"===i.type?"missing":i.type),a=i&&i.target&&i.target.src;o.message="Loading chunk "+t+" failed.\n("+s+": "+a+")",o.name="ChunkLoadError",o.type=s,o.request=a,r[1](o)}}),"chunk-"+t,t)}};var t=(t,i)=>{var r,s,[a,o,l]=i,c=0;if(a.some((t=>0!==e[t]))){for(r in o)n.o(o,r)&&(n.m[r]=o[r]);l&&l(n)}for(t&&t(i);c<a.length;c++)s=a[c],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},i=self.expressionMetricVis_bundle_jsonpfunction=self.expressionMetricVis_bundle_jsonpfunction||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})(),n(881),__kbnBundles__.define("plugin/expressionMetricVis/public",n,348)})();