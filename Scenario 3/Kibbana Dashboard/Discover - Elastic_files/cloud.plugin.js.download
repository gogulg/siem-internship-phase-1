/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */(()=>{var e={768:(e,t,r)=>{"use strict";r.r(t),r.d(t,{plugin:()=>f});var o=r(915);const i=__kbnSharedDeps__.React;var s=r.n(i);const l=__kbnSharedDeps__.Rxjs;function n(e){if(e)return e.split("/").pop()}var a=r(640).Buffer;function d(e,t){const r=e.split(":").pop();if(!r)return void t.debug(`Unable to decode ${r}`);let o;try{o=a.from(r,"base64").toString("utf8")}catch{return void t.debug(`base64 decoding failed on ${r}`)}const i=o.split("$");if(i.length<3)return void t.debug(`Expected at least 3 parts in ${o}`);const[s,l]=c(i[0]),[n,d]=c(i[1],l),[u,p]=c(i[2],l);return{host:s,defaultPort:l,elasticsearchUrl:`https://${n}.${s}:${d}`,kibanaUrl:`https://${u}.${s}:${p}`}}function c(e,t="443"){const[r,o=t]=e.split(":");return[r,o]}function u(e,t){return e&&t?`${e}${t}`:""}function p(e){var t;if(e)return null===(t=[{cloudValue:"search",kibanaValue:"es"},{cloudValue:"elasticsearch",kibanaValue:"es"},{cloudValue:"observability",kibanaValue:"oblt"},{cloudValue:"security",kibanaValue:"security"}].find((({cloudValue:t})=>e.toLowerCase()===t)))||void 0===t?void 0:t.kibanaValue}const h=__kbnSharedDeps__.EmotionReact;class CloudPlugin{constructor(e){var t;(0,o.default)(this,"config",void 0),(0,o.default)(this,"isCloudEnabled",void 0),(0,o.default)(this,"isServerlessEnabled",void 0),(0,o.default)(this,"contextProviders",[]),(0,o.default)(this,"logger",void 0),(0,o.default)(this,"elasticsearchConfig",void 0),this.initializerContext=e,this.config=this.initializerContext.config.get(),this.isCloudEnabled="string"==typeof this.config.id,this.isServerlessEnabled=!(null===(t=this.config.serverless)||void 0===t||!t.project_id),this.logger=e.logger.get(),this.elasticsearchConfig=void 0}setup(e){var t,r,o,i,s,a,c,u;!function(e,t){if(!t.id)return;const{id:r,organization_id:o,trial_end_date:i,is_elastic_staff_owned:s,serverless:{project_id:a,project_type:d,orchestrator_target:c}={}}=t;e.registerContextProvider({name:"Cloud Deployment Metadata",context$:(0,l.of)({cloudId:r,organizationId:o,deploymentId:n(t.deployment_url),cloudTrialEndDate:i,cloudIsElasticStaffOwned:s,projectId:a,projectType:d,orchestratorTarget:c}),schema:{cloudId:{type:"keyword",_meta:{description:"The Cloud ID"}},organizationId:{type:"keyword",_meta:{description:"The Elastic Cloud Organization ID that owns the deployment/project",optional:!0}},deploymentId:{type:"keyword",_meta:{description:"The Deployment ID",optional:!0}},cloudTrialEndDate:{type:"date",_meta:{description:"When the Elastic Cloud trial ends/ended",optional:!0}},cloudIsElasticStaffOwned:{type:"boolean",_meta:{description:"`true` if the owner of the deployment is an Elastician",optional:!0}},projectId:{type:"keyword",_meta:{description:"The Serverless Project ID",optional:!0}},projectType:{type:"keyword",_meta:{description:"The Serverless Project type",optional:!0}},orchestratorTarget:{type:"keyword",_meta:{description:"The Orchestrator Target where it is deployed (canary/non-canary)",optional:!0}}}})}(e.analytics,this.config);const{id:h,cname:f,base_url:g,trial_end_date:v,is_elastic_staff_owned:_,csp:b}=this.config;let y;return h&&(y=d(h,this.logger)),{cloudId:h,organizationId:this.config.organization_id,deploymentId:n(this.config.deployment_url),cname:f,csp:b,baseUrl:g,...this.getCloudUrls(),kibanaUrl:null===(t=y)||void 0===t?void 0:t.kibanaUrl,cloudHost:null===(r=y)||void 0===r?void 0:r.host,cloudDefaultPort:null===(o=y)||void 0===o?void 0:o.defaultPort,trialEndDate:v?new Date(v):void 0,isElasticStaffOwned:_,isCloudEnabled:this.isCloudEnabled,onboarding:{defaultSolution:p(null===(i=this.config.onboarding)||void 0===i?void 0:i.default_solution)},isServerlessEnabled:this.isServerlessEnabled,serverless:{projectId:null===(s=this.config.serverless)||void 0===s?void 0:s.project_id,projectName:null===(a=this.config.serverless)||void 0===a?void 0:a.project_name,projectType:null===(c=this.config.serverless)||void 0===c?void 0:c.project_type,orchestratorTarget:null===(u=this.config.serverless)||void 0===u?void 0:u.orchestrator_target},registerCloudService:e=>{this.contextProviders.push(e)},fetchElasticsearchConfig:this.fetchElasticsearchConfig.bind(this,e.http)}}start(e){var t,r,o,i;e.chrome.setHelpSupportUrl(function(e){var t;let r="https://support.elastic.co/";return null!==(t=e.serverless)&&void 0!==t&&t.project_id?r+="?serverless_project_id="+e.serverless.project_id:e.id&&(r+="?cloud_deployment_id="+e.id),r}(this.config));const{deploymentsUrl:l,deploymentUrl:n,profileUrl:a,billingUrl:c,organizationUrl:u,performanceUrl:p,usersAndRolesUrl:f,projectsUrl:g}=this.getCloudUrls();let v;return this.config.id&&(v=d(this.config.id,this.logger)),{CloudContextProvider:({children:e})=>(0,h.jsx)(s().Fragment,null,this.contextProviders.reduce(((e,t)=>(0,h.jsx)(t,null," ",e," ")),e)),isCloudEnabled:this.isCloudEnabled,cloudId:this.config.id,billingUrl:c,deploymentsUrl:l,deploymentUrl:n,profileUrl:a,organizationUrl:u,projectsUrl:g,kibanaUrl:null===(t=v)||void 0===t?void 0:t.kibanaUrl,isServerlessEnabled:this.isServerlessEnabled,serverless:{projectId:null===(r=this.config.serverless)||void 0===r?void 0:r.project_id,projectName:null===(o=this.config.serverless)||void 0===o?void 0:o.project_name,projectType:null===(i=this.config.serverless)||void 0===i?void 0:i.project_type},performanceUrl:p,usersAndRolesUrl:f,fetchElasticsearchConfig:this.fetchElasticsearchConfig.bind(this,e.http)}}stop(){}getCloudUrls(){const{profile_url:e,billing_url:t,organization_url:r,deployments_url:o,deployment_url:i,base_url:s,performance_url:l,users_and_roles_url:n,projects_url:a}=this.config,d=u(s,o),c=u(s,i);return{deploymentsUrl:d,deploymentUrl:c,profileUrl:u(s,e),billingUrl:u(s,t),organizationUrl:u(s,r),snapshotsUrl:`${c}/elasticsearch/snapshots/`,performanceUrl:u(s,l),usersAndRolesUrl:u(s,n),projectsUrl:u(s,a)}}async fetchElasticsearchConfig(e){if(void 0!==this.elasticsearchConfig)return this.elasticsearchConfig;try{const t=await e.get("/api/internal/cloud/elasticsearch_config",{version:"1"});return this.elasticsearchConfig={elasticsearchUrl:t.elasticsearch_url||void 0},this.elasticsearchConfig}catch{return this.logger.error("Failed to fetch Elasticsearch config"),{elasticsearchUrl:void 0}}}}function f(e){return new CloudPlugin(e)}},66:(e,t,r)=>{r.p=window.__kbnPublicPath__.cloud},640:(e,t,r)=>{e.exports=r(497)(39675)},915:(e,t,r)=>{e.exports=r(497)(67493)},497:e=>{"use strict";e.exports=__kbnSharedDeps_npm__}},t={};function r(o){var i=t[o];if(void 0!==i)return i.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=o[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),r(66),__kbnBundles__.define("plugin/cloud/public",r,768)})();