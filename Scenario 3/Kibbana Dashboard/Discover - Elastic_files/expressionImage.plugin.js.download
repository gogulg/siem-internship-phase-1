(()=>{var e={125:(e,t,r)=>{"use strict";r.r(t),r.d(t,{getImageRenderer:()=>c,imageRendererFactory:()=>d,plugin:()=>h}),__kbnSharedDeps__.React;const a=__kbnSharedDeps__.ReactDom,n=__kbnSharedDeps__.KbnI18n;var s=r(636);const o=__kbnSharedDeps__.KbnReactKibanaContextTheme,i=__kbnSharedDeps__.KbnSharedUxErrorBoundary,l=__kbnSharedDeps__.EmotionReact,c=e=>()=>({name:"image",displayName:n.i18n.translate("expressionImage.renderer.image.displayName",{defaultMessage:"Image"}),help:n.i18n.translate("expressionImage.renderer.image.helpDescription",{defaultMessage:"Render an image"}),reuseDomNode:!0,render:async(t,r,n)=>{var c;const{elasticLogo:d}=await(0,s.getElasticLogo)(),g={height:"100%",backgroundImage:`url(${(0,s.isValidUrl)(null!==(c=r.dataurl)&&void 0!==c?c:"")?r.dataurl:d})`,backgroundRepeat:"no-repeat",backgroundPosition:"center center",backgroundSize:r.mode};n.onDestroy((()=>{(0,a.unmountComponentAtNode)(t)})),(0,a.render)((0,l.jsx)(i.KibanaErrorBoundaryProvider,{analytics:void 0},(0,l.jsx)(i.KibanaErrorBoundary,null,(0,l.jsx)(o.KibanaThemeProvider,e,(0,l.jsx)("div",{style:g})))),t,(()=>n.done()))}}),d=e=>c(e),g="`base64`";let p=function(e){return e.CONTAIN="contain",e.COVER="cover",e.STRETCH="stretch",e}({});const u={help:n.i18n.translate("expressionImage.functions.imageHelpText",{defaultMessage:"Displays an image. Provide an image asset as a {BASE64} data {URL}, or pass in a sub-expression.",values:{BASE64:g,URL:"URL"}}),args:{dataurl:n.i18n.translate("expressionImage.functions.image.args.dataurlHelpText",{defaultMessage:"The {https} {URL} or {BASE64} data {URL} of an image.",values:{BASE64:g,https:"HTTP(S)",URL:"URL"}}),mode:n.i18n.translate("expressionImage.functions.image.args.modeHelpText",{defaultMessage:"{contain} shows the entire image, scaled to fit. {cover} fills the container with the image, cropping from the sides or bottom as needed. {stretch} resizes the height and width of the image to 100% of the container.",values:{contain:`\`"${p.CONTAIN}"\``,cover:`\`"${p.COVER}"\``,stretch:`\`"${p.STRETCH}"\``}})}},m=()=>{const{help:e,args:t}=u;return{name:"image",aliases:[],type:"image",inputTypes:["null"],help:e,args:{dataurl:{types:["string","null"],help:t.dataurl,aliases:["_","url"],default:null},mode:{types:["string"],help:t.mode,default:"contain",options:Object.values(p)}},fn:async(e,{dataurl:t,mode:r})=>{if(!r||!Object.values(p).includes(r))throw new Error(n.i18n.translate("expressionImage.functions.image.invalidImageModeErrorMessage",{defaultMessage:'"mode" must be "{contain}", "{cover}", or "{stretch}"',values:{contain:p.CONTAIN,cover:p.COVER,stretch:p.STRETCH}}));const a="stretch"===r?"100% 100%":r,{elasticLogo:o}=await(0,s.getElasticLogo)();return{type:"image",mode:a,dataurl:(0,s.resolveWithMissingImage)(t,o)}}}};class ExpressionImagePlugin{setup(e,{expressions:t}){e.getStartServices().then((([e])=>{t.registerFunction(m),t.registerRenderer(d(e))}))}start(e){}stop(){}}function h(){return new ExpressionImagePlugin}},163:(e,t,r)=>{r.p=window.__kbnPublicPath__.expressionImage},636:(e,t,r)=>{r.r(t);var a=__kbnBundles__.get("plugin/presentationUtil/common");Object.defineProperties(t,Object.getOwnPropertyDescriptors(a))}},t={};function r(a){var n=t[a];if(void 0!==n)return n.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,r),s.exports}r.d=(e,t)=>{for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");if(a.length)for(var n=a.length-1;n>-1&&(!e||!/^http(s?):/.test(e));)e=a[n--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),r(163),__kbnBundles__.define("plugin/expressionImage/public",r,125)})();